digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55cb3bdfb800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %retval = alloca i32, align 4\l  %p = alloca i64, align 8\l  %q = alloca i64, align 8\l  %n = alloca i64, align 8\l  %phi = alloca i64, align 8\l  %e = alloca i64, align 8\l  %d = alloca i64, align 8\l  %plaintext = alloca i64, align 8\l  %ciphertext = alloca i64, align 8\l  %decrypted = alloca i64, align 8\l  store i32 0, i32* %retval, align 4\l  call void @llvm.dbg.declare(metadata i64* %p, metadata !286, metadata\l... !DIExpression()), !dbg !287\l  store i64 61, i64* %p, align 8, !dbg !287\l  call void @llvm.dbg.declare(metadata i64* %q, metadata !288, metadata\l... !DIExpression()), !dbg !289\l  store i64 53, i64* %q, align 8, !dbg !289\l  call void @llvm.dbg.declare(metadata i64* %n, metadata !290, metadata\l... !DIExpression()), !dbg !291\l  %0 = load i64, i64* %p, align 8, !dbg !292\l  %1 = load i64, i64* %q, align 8, !dbg !293\l  %mul = mul i64 %0, %1, !dbg !294\l  store i64 %mul, i64* %n, align 8, !dbg !291\l  call void @llvm.dbg.declare(metadata i64* %phi, metadata !295, metadata\l... !DIExpression()), !dbg !296\l  %2 = load i64, i64* %p, align 8, !dbg !297\l  %sub = sub i64 %2, 1, !dbg !298\l  %3 = load i64, i64* %q, align 8, !dbg !299\l  %sub1 = sub i64 %3, 1, !dbg !300\l  %mul2 = mul i64 %sub, %sub1, !dbg !301\l  store i64 %mul2, i64* %phi, align 8, !dbg !296\l  call void @llvm.dbg.declare(metadata i64* %e, metadata !302, metadata\l... !DIExpression()), !dbg !303\l  store i64 17, i64* %e, align 8, !dbg !303\l  call void @llvm.dbg.declare(metadata i64* %d, metadata !304, metadata\l... !DIExpression()), !dbg !305\l  store i64 2753, i64* %d, align 8, !dbg !305\l  call void @llvm.dbg.declare(metadata i64* %plaintext, metadata !306,\l... metadata !DIExpression()), !dbg !307\l  store i64 65, i64* %plaintext, align 8, !dbg !307\l  call void @llvm.dbg.declare(metadata i64* %ciphertext, metadata !308,\l... metadata !DIExpression()), !dbg !309\l  %4 = load i64, i64* %plaintext, align 8, !dbg !310\l  %5 = load i64, i64* %e, align 8, !dbg !311\l  %6 = load i64, i64* %n, align 8, !dbg !312\l  %call = call i64 @_Z6modexpyyy(i64 %4, i64 %5, i64 %6), !dbg !313\l  store i64 %call, i64* %ciphertext, align 8, !dbg !309\l  call void @llvm.dbg.declare(metadata i64* %decrypted, metadata !314,\l... metadata !DIExpression()), !dbg !315\l  %7 = load i64, i64* %ciphertext, align 8, !dbg !316\l  %8 = load i64, i64* %d, align 8, !dbg !317\l  %9 = load i64, i64* %n, align 8, !dbg !318\l  %call3 = call i64 @_Z6modexpyyy(i64 %7, i64 %8, i64 %9), !dbg !319\l  store i64 %call3, i64* %decrypted, align 8, !dbg !315\l  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8],\l... [27 x i8]* @.str.2, i64 0, i64 0)), !dbg !320\l  %10 = load i64, i64* %plaintext, align 8, !dbg !321\l  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8],\l... [18 x i8]* @.str.3, i64 0, i64 0), i64 %10), !dbg !322\l  %11 = load i64, i64* %ciphertext, align 8, !dbg !323\l  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8],\l... [18 x i8]* @.str.4, i64 0, i64 0), i64 %11), !dbg !324\l  %12 = load i64, i64* %decrypted, align 8, !dbg !325\l  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8],\l... [18 x i8]* @.str.5, i64 0, i64 0), i64 %12), !dbg !326\l  %13 = load i64, i64* %plaintext, align 8, !dbg !327\l  %14 = load i64, i64* %decrypted, align 8, !dbg !329\l  %cmp = icmp eq i64 %13, %14, !dbg !330\l  br i1 %cmp, label %if.then, label %if.else, !dbg !331, !prof !332\l|{<s0>T|<s1>F}}"];
	Node0x55cb3bdfb800:s0 -> Node0x55cb3bdecae0[label="100.00%" penwidth=2.00];
	Node0x55cb3bdfb800:s1 -> Node0x55cb3be02740[label="0.00%" penwidth=1.00];
	Node0x55cb3bdecae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then:                                          \l  %pgocount2 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main.4, i64 0, i64 0), align 8, !dbg !333\l  %15 = add i64 %pgocount2, 1, !dbg !333\l  store i64 %15, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main.4, i64 0, i64 0), align 8, !dbg !333\l  %pgocount = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main, i64 0, i64 0), align 8, !dbg !333\l  %16 = add i64 %pgocount, 1, !dbg !333\l  store i64 %16, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main, i64 0, i64 0), align 8, !dbg !333\l  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8],\l... [44 x i8]* @.str.6, i64 0, i64 0)), !dbg !333\l  br label %if.end, !dbg !335\l}"];
	Node0x55cb3bdecae0 -> Node0x55cb3be02790[penwidth=2];
	Node0x55cb3be02740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{if.else:                                          \l  %pgocount3 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main.4, i64 0, i64 1), align 8, !dbg !336\l  %17 = add i64 %pgocount3, 1, !dbg !336\l  store i64 %17, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main.4, i64 0, i64 1), align 8, !dbg !336\l  %pgocount1 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main, i64 0, i64 1), align 8, !dbg !336\l  %18 = add i64 %pgocount1, 1, !dbg !336\l  store i64 %18, i64* getelementptr inbounds ([2 x i64], [2 x i64]*\l... @__profc_main, i64 0, i64 1), align 8, !dbg !336\l  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8],\l... [27 x i8]* @.str.7, i64 0, i64 0)), !dbg !336\l  br label %if.end\l}"];
	Node0x55cb3be02740 -> Node0x55cb3be02790[penwidth=2];
	Node0x55cb3be02790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  ret i32 0, !dbg !338\l}"];
}
