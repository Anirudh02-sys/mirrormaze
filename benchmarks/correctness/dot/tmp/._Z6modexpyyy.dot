digraph "CFG for '_Z6modexpyyy' function" {
	label="CFG for '_Z6modexpyyy' function";

	Node0x55ba37df3b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{entry:\l  %pgocount3 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 2), align 8\l  %0 = add i64 %pgocount3, 1\l  store i64 %0, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 2), align 8\l  %pgocount = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 2), align 8\l  %1 = add i64 %pgocount, 1\l  store i64 %1, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 2), align 8\l  %base.addr = alloca i64, align 8\l  %exp.addr = alloca i64, align 8\l  %mod.addr = alloca i64, align 8\l  %result = alloca i64, align 8\l  store i64 %base, i64* %base.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %base.addr, metadata !288,\l... metadata !DIExpression()), !dbg !289\l  store i64 %exp, i64* %exp.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !290, metadata\l... !DIExpression()), !dbg !291\l  %exp.addr1 = bitcast i64* %exp.addr to i8*\l  call void @llvm.var.annotation(i8* %exp.addr1, i8* getelementptr inbounds\l... ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 10, i8* null)\l  store i64 %mod, i64* %mod.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %mod.addr, metadata !292, metadata\l... !DIExpression()), !dbg !293\l  call void @llvm.dbg.declare(metadata i64* %result, metadata !294, metadata\l... !DIExpression()), !dbg !295\l  store i64 1, i64* %result, align 8, !dbg !295\l  %2 = load i64, i64* %mod.addr, align 8, !dbg !296\l  %3 = load i64, i64* %base.addr, align 8, !dbg !297\l  %rem = urem i64 %3, %2, !dbg !297\l  store i64 %rem, i64* %base.addr, align 8, !dbg !297\l  br label %while.cond, !dbg !298\l}"];
	Node0x55ba37df3b50 -> Node0x55ba37e07670[penwidth=2];
	Node0x55ba37e07670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %4 = load i64, i64* %exp.addr, align 8, !dbg !299\l  %cmp = icmp ugt i64 %4, 0, !dbg !300\l  br i1 %cmp, label %while.body, label %while.end, !dbg !298, !prof !301\l|{<s0>T|<s1>F}}"];
	Node0x55ba37e07670:s0 -> Node0x55ba37e076c0[label="89.47%" penwidth=1.89];
	Node0x55ba37e07670:s1 -> Node0x55ba37e077b0[label="10.53%" penwidth=1.11];
	Node0x55ba37e076c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{while.body:                                       \l  %5 = load i64, i64* %exp.addr, align 8, !dbg !302\l  %and = and i64 %5, 1, !dbg !305\l  %tobool = icmp ne i64 %and, 0, !dbg !302\l  br i1 %tobool, label %if.then, label %if.end, !dbg !306, !prof !307\l|{<s0>T|<s1>F}}"];
	Node0x55ba37e076c0:s0 -> Node0x55ba37e07710[label="41.18%" penwidth=1.41];
	Node0x55ba37e076c0:s1 -> Node0x55ba37e07760[label="58.82%" penwidth=1.59];
	Node0x55ba37e07710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then:                                          \l  %pgocount4 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 1), align 8, !dbg !308\l  %6 = add i64 %pgocount4, 1, !dbg !308\l  store i64 %6, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 1), align 8, !dbg !308\l  %pgocount1 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 1), align 8, !dbg !308\l  %7 = add i64 %pgocount1, 1, !dbg !308\l  store i64 %7, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 1), align 8, !dbg !308\l  %8 = load i64, i64* %result, align 8, !dbg !308\l  %9 = load i64, i64* %base.addr, align 8, !dbg !310\l  %mul = mul i64 %8, %9, !dbg !311\l  %10 = load i64, i64* %mod.addr, align 8, !dbg !312\l  %rem2 = urem i64 %mul, %10, !dbg !313\l  store i64 %rem2, i64* %result, align 8, !dbg !314\l  br label %if.end, !dbg !315\l}"];
	Node0x55ba37e07710 -> Node0x55ba37e07760[penwidth=2];
	Node0x55ba37e07760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{if.end:                                           \l  %pgocount5 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 0), align 8, !dbg !316\l  %11 = add i64 %pgocount5, 1, !dbg !316\l  store i64 %11, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy.2, i64 0, i64 0), align 8, !dbg !316\l  %pgocount2 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 0), align 8, !dbg !316\l  %12 = add i64 %pgocount2, 1, !dbg !316\l  store i64 %12, i64* getelementptr inbounds ([3 x i64], [3 x i64]*\l... @__profc__Z6modexpyyy, i64 0, i64 0), align 8, !dbg !316\l  %13 = load i64, i64* %exp.addr, align 8, !dbg !316\l  %shr = lshr i64 %13, 1, !dbg !316\l  store i64 %shr, i64* %exp.addr, align 8, !dbg !316\l  %14 = load i64, i64* %base.addr, align 8, !dbg !317\l  %15 = load i64, i64* %base.addr, align 8, !dbg !318\l  %mul3 = mul i64 %14, %15, !dbg !319\l  %16 = load i64, i64* %mod.addr, align 8, !dbg !320\l  %rem4 = urem i64 %mul3, %16, !dbg !321\l  store i64 %rem4, i64* %base.addr, align 8, !dbg !322\l  br label %while.cond, !dbg !298, !llvm.loop !323\l}"];
	Node0x55ba37e07760 -> Node0x55ba37e07670[penwidth=2];
	Node0x55ba37e077b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{while.end:                                        \l  %17 = load i64, i64* %result, align 8, !dbg !326\l  ret i64 %17, !dbg !327\l}"];
}
